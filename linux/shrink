#!/bin/bash


PATH_IMAGES="$HOME/.local/share/gnome-boxes/images/"
TYPE_QCOW2="QEMU QCOW2 Image"

removeBackups=false

function help() {
    echo '
shrink

SYNOPSIS: 
    shrink [OPTION]

DESCRIPTION:
    Shrink QCOW2 virtual disks to reduce actual file size.

OPTION:
    -h, --help
        show the manual
    -s, --shrink-only
        shrink files without performing any special operation
    -r, --remove-backups
        automatically removes old files after the conversion
    -c, --clean
        remove old backups from previous shrink operations

'
exit 0
}

function clean () {
    # Removes old backups
    # Before removing backups make sure the original files exists

    for file in $PATH_IMAGES*; do
        case $file in 
            *.bak) 
                fileBaseName=$(basename -s .bak "$file")
                fileType=$(file -b "$file")

                # A file without BAK extension should exists
                if [ ! -f "$fileBaseName" ] ; then
                    echo "ERROR: original file for backup $file does not exist!"
                    exit 1
                fi

                # The file without BAK extension should be a valid QCOW disk
                case $fileType in 
                    *$TYPE_QCOW2*)
                        echo "ERROR: $fileBaseName is not a valid QCOW2 file!"
                        exit 1;;
                    
                esac
        esac
    done

    rm -rf $PATH_IMAGES*.bak
    exit 0
}

function check_PATH_IMAGES () {
    if [[ $(ls -1qA $PATH_IMAGES | grep -q .) == "0" ]] ; then
        echo "ERROR: $PATH_IMAGES configured as PATH_IMAGES is empty. No disk found."
        exit 1 
    fi
}

# Parse arguments
if [ -z "$1" ]; then
        echo "Error: no argument given"
        help
fi

case $1 in
    -h|--help)
        help;;
    -s|--shrink-only)
        removeBackups=false;;
    -r|--remove-backups)
        removeBackups=true;;
    -c|--clean)
        clean;;
    *)
        echo "Unknown parameters"
        help;;
esac

check_PATH_IMAGES

for file in $PATH_IMAGES*; do

    echo "Processing: $file"

    # Check if file exists
    if [[ ! -f "$file" ]] ; then
        echo "DEBUG: while looping folder the following element was not found $file"
        continue
    fi

    fileType=$(file -b "$file")
    # Check if file is a QCOW2 disk
    case "$fileType" in 
        *"$TYPE_QCOW2"*)
             
            # Check if file ends with BAK extension
            case "$file" in 
                *".bak") 
                    echo -n "ERROR: backup file found $file"
                    echo ". Skipping..."
                    continue
            esac

            # Check if a backup already exists for the current file
            if [[ -f "$file".bak ]] ; then
                echo -n "ERROR: backup file found for $file"
                echo ". Skipping..."
                continue
            fi

            echo "INFO: Shrinking: $file"
            mv "$file" "$file".bak
            /usr/bin/qemu-img convert -p -O qcow2 "$file".bak "$file"
            if [ $removeBackups = true ] ; then
                rm -rf "$file".bak
            fi
    esac
done

echo "INFO: all files processed."
